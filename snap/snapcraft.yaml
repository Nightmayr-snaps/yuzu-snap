name: yuzu
base: core20
version: '995'
summary: Nintendo Switch Emulator
description: |
  yuzu is an experimental open-source emulator for the Nintendo Switch from the creators of Citra. 
  It is written in C++ with portability in mind, with builds actively maintained for Windows and Linux.

  yuzu only emulates a subset of Switch hardware and therefore most commercial games do not run at full speed or are not fully functional.

  Usage: Launch yuzu from your desktop app-launcher or run the command *`yuzu`* from the terminal. If you have already installed yuzu by 
  alternative means, use the command *`snap run yuzu`*. To launch *`yuzu-cmd`*, run the command *`snap run yuzu.yuzu-cmd`*.
  Enable the relevant permissions. Yuzu folder location: *`$HOME/snap/yuzu/common/.local/share/yuzu`*

  This snap is not necessarily endorsed or officially maintained by the upstream developers.

  Upstream Project: https://yuzu-emu.org/
  snapcraft.yaml Build Definition: https://github.com/Nightmayr/yuzu-snap/blob/master/snap/snapcraft.yaml
# issues, donation and website require manual review skip for now
# issues: https://github.com/Nightmayr-snaps/yuzu-snap/issues
# donation: https://yuzu-emu.org/donate
# website: https://yuzu-emu.org/
license: GPL-2.0
icon: snap/gui/yuzu.png
grade: stable
confinement: strict
architectures:
- build-on: amd64
compression: lzo
# package-repositories:
#   - type: apt
#     ppa: beineri/opt-qt-5.15.2-focal
parts:
  yuzu:
    source: https://github.com/yuzu-emu/yuzu-mainline.git
    source-tag: mainline-0-$SNAPCRAFT_PROJECT_VERSION
    plugin: cmake
    cmake-parameters:
    - -DCMAKE_BUILD_TYPE=Release
    - -DENABLE_COMPATIBILITY_LIST_DOWNLOAD=ON
    - -DUSE_DISCORD_PRESENCE=ON
    - -DENABLE_QT_TRANSLATION=ON
    - -DYUZU_USE_QT_WEB_ENGINE=ON
    - -DYUZU_ENABLE_COMPATIBILITY_REPORTING=${ENABLE_COMPATIBILITY_REPORTING:-"OFF"}
    - -DDISPLAY_VERSION=$SNAPCRAFT_PROJECT_VERSION
    - -DBUILD_TAG=mainline-$SNAPCRAFT_PROJECT_VERSION"
    - -DBUILD_REPOSITORY=yuzu-emu/yuzu-mainline"
    - -DCMAKE_FIND_ROOT_PATH=/usr\;/root/stage\;/snap/nightmayr-kf5-qt-5-15-2-core20-sdk/current
    build-environment:
    - &id001
      SNAPCRAFT_CMAKE_ARGS: -DCMAKE_FIND_ROOT_PATH=/snap/nightmayr-kf5-qt-5-15-2-core20-sdk/current
    - TITLEBARFORMATIDLE: yuzu {}
    - TITLEBARFORMATRUNNING: yuzu {} | {}
    cmake-generator: Ninja
    override-pull: |
      snapcraftctl pull
      # git apply $SNAPCRAFT_STAGE/nodirtyversion.patch
    override-build: |
      if [ ! -f /usr/bin/lsb_release ]; then
        apt install -y lsb-release
      fi
      sudo update-alternatives --install /usr/bin/gcc gcc /usr/bin/gcc-10 10
      sudo update-alternatives --install /usr/bin/g++ g++ /usr/bin/g++-10 10
      pip3 install conan
      snapcraftctl build
      sed -i 's|Icon=yuzu|Icon=/usr/local/share/icons/hicolor/scalable/apps/yuzu.svg|' $SNAPCRAFT_PART_INSTALL/usr/local/share/applications/yuzu.desktop
    build-snaps:
    - nightmayr-kf5-qt-5-15-2-core20-sdk/latest/stable
    build-packages:
    - cmake
    - ninja-build
    - build-essential
    - gcc-10
    - g++-10
    - python3-pip
    - sqlite3
    - libsqlite3-dev
    - python3-setuptools
    - libvulkan-dev
    - python
    - libfmt-dev
    - libzip-dev
    - liblz4-dev
    - libmbedtls-dev
    - libssl-dev
    - libopus-dev
    - zlib1g-dev
    - libzstd-dev
    # - libavcodec-dev
    # - libavformat-dev
    # - libavutil-dev
    # - libswscale-dev
    - autotools-dev
    - automake
    - autoconf
    - libtool
    - libpulse-dev
    - libasound2
    - libhidapi-dev
    - mesa-common-dev
    - libxext-dev
    - libudev-dev
    stage-packages:
    - libxi6
    - libxinerama1
    - libxrandr2
    - libvulkan1
    - mesa-vulkan-drivers
    - vulkan-utils
    - libzip5
    - libpulse0
    - libgl1-mesa-glx
    - libopus0
    - mesa-utils
    - xdg-utils
    # - libswscale5
    # - libavformat58
    # - libavcodec58
    # - libavutil56
    - libhidapi-libusb0
    - libhidapi-hidraw0
    - libasound2
    - libudev1
    stage:
    - -lib/x86_64-linux-gnu/libdbus-1.so.3.19.11
    - -usr/share/doc/libdbus-1-3/changelog.Debian.gz
    - -lib/x86_64-linux-gnu/libz.so.1.2.11
    - -usr/share/doc
    after:
    - patches
    - glslangvalidator
  glslangvalidator:
    plugin: nil
    source: https://github.com/KhronosGroup/glslang/releases/download/master-tot/glslang-master-linux-Release.zip
    override-build: 'cp -r $SNAPCRAFT_PART_BUILD/* /usr'
    prime:
    - -*
    build-environment: &id002
    - *id001
  patches:
    plugin: dump
    source: snap/local/patches
    source-type: local
    prime:
    - -*
    build-environment: *id002
  launchers:
    plugin: dump
    source: snap/local/launchers
    source-type: local
    organize:
      '*': bin/
    build-environment: *id002
  kde-neon-extension:
    build-packages:
    - g++
    build-snaps:
    - kde-frameworks-5-qt-5-15-3-core20-sdk/latest/candidate
    make-parameters:
    - PLATFORM_PLUG=nightmayr-kf5-qt-5-15-2-core20
    plugin: make
    source: $SNAPCRAFT_EXTENSIONS_DIR/desktop
    source-subdir: kde-neon
    override-prime: |
      snapcraftctl prime
      sed -i 's|XDG_DATA_HOME="$SNAP_USER_DATA|XDG_DATA_HOME="$SNAP_USER_COMMON|' $SNAPCRAFT_PRIME/snap/command-chain/desktop-launch
      sed -i 's|XDG_CONFIG_HOME="$SNAP_USER_DATA|XDG_CONFIG_HOME="$SNAP_USER_COMMON|' $SNAPCRAFT_PRIME/snap/command-chain/desktop-launch
  cleanup:
    after:
    - kde-neon-extension
    - yuzu
    - launchers
    plugin: nil
    build-snaps:
    - core20
    - nightmayr-kf5-qt-5-15-2-core20
    override-prime: |
      set -eux
      for snap in "core20" "nightmayr-kf5-qt-5-15-2-core20"; do  # List all content-snaps and base snaps you're using here
        cd "/snap/$snap/current" && find . -type f,l -exec rm -f "$SNAPCRAFT_PRIME/{}" \;
      done
layout:
  /usr/share/vulkan:
    symlink: $SNAP/usr/share/vulkan
  /usr/lib/$SNAPCRAFT_ARCH_TRIPLET/libvulkan_intel.so:
    symlink: $SNAP/usr/lib/$SNAPCRAFT_ARCH_TRIPLET/libvulkan_intel.so
  /usr/lib/$SNAPCRAFT_ARCH_TRIPLET/libvulkan_radeon.so:
    symlink: $SNAP/usr/lib/$SNAPCRAFT_ARCH_TRIPLET/libvulkan_radeon.so
  /usr/share/qt5:
    symlink: $SNAP/kf5/usr/share/qt5
  /usr/share/libdrm:
    symlink: $SNAP/kf5/usr/share/libdrm
apps:
  yuzu:
    command: usr/local/bin/yuzu
    command-chain:
    - snap/command-chain/desktop-launch
    - bin/yuzu-launch
    desktop: usr/local/share/applications/yuzu.desktop
    environment:
      HOME: $SNAP_USER_COMMON
      LD_LIBRARY_PATH: $SNAP/usr/lib/$SNAPCRAFT_ARCH_TRIPLET:$SNAP/usr/lib/$SNAPCRAFT_ARCH_TRIPLET/pulseaudio
      DISABLE_WAYLAND: 1
    plugs:
    - desktop
    - desktop-legacy
    - opengl
    - wayland
    - x11
    - audio-playback
    - joystick
    - unity7
    - network
    - network-bind
    - home
    - removable-media
    - gsettings
    - hardware-observe
    - mount-observe
    - bluez
    - browser-support
    - screen-inhibit-control
    - raw-usb
  yuzu-cmd:
    command: usr/local/bin/yuzu-cmd
    command-chain:
    - "bin/yuzu-launch"
    environment:
      HOME: $SNAP_USER_COMMON
      LD_LIBRARY_PATH: $SNAP/usr/lib/$SNAPCRAFT_ARCH_TRIPLET:$SNAP/usr/lib/$SNAPCRAFT_ARCH_TRIPLET/pulseaudio
      DISABLE_WAYLAND: 1
    plugs:
    - x11
    - wayland
    - audio-playback
    - opengl
    - joystick
    - network
    - network-bind
    - home
    - removable-media
    - hardware-observe
    - mount-observe
    - bluez
    - browser-support
    - screen-inhibit-control
    - raw-usb
assumes:
- snapd2.43
plugs:
  desktop:
    mount-host-font-cache: false
  icon-themes:
    default-provider: gtk-common-themes
    interface: content
    target: $SNAP/data-dir/icons
  nightmayr-kf5-qt-5-15-2-core20:
    default-provider: nightmayr-kf5-qt-5-15-2-core20
    interface: content
    target: $SNAP/kf5
  sound-themes:
    default-provider: gtk-common-themes
    interface: content
    target: $SNAP/data-dir/sounds
environment:
  SNAP_DESKTOP_RUNTIME: $SNAP/kf5
hooks:
  configure:
    command-chain:
    - snap/command-chain/hooks-configure-desktop
    plugs:
    - desktop
