name: yuzu
base: core20
version: '0-295'
summary: yuzu is an experimental open-source emulator for the Nintendo Switch # 79 char long summary
description: |
  Nintendo Switch Emulator. yuzu is an experimental open-source emulator for the Nintendo Switch from the creators of Citra. 
  It is written in C++ with portability in mind, with builds actively maintained for Windows and Linux.

  Usage: Launch yuzu from your desktop app-launcher or run the command *`yuzu`* from the terminal. If you have already installed yuzu by 
  alternative means, use the command *`snap run yuzu`*. To launch *`yuzu-cmd`*, run the command *`snap run yuzu.yuzu-cmd`*.
  Enable the relevant permissions. Yuzu folder location: *`$HOME/snap/yuzu/common/.local/share/yuzu`*

  This snap is not necessarily endorsed or officially maintained by the upstream developers.

  Upstream Project: https://yuzu-emu.org/
  snapcraft.yaml Build Definition: https://github.com/Nightmayr/yuzu-snap/blob/master/snap/snapcraft.yaml

  Donate to yuzu: https://yuzu-emu.org/donate
license: GPL-2.0
icon: snap/gui/yuzu.png
grade: stable # must be 'stable' to release into candidate/stable channels
confinement: strict # use 'strict' once you have the right plugs and slots
architectures:
  - build-on: amd64

package-repositories:
  - type: apt
    ppa: graphics-drivers/ppa

parts:
  yuzu:
    source: https://github.com/yuzu-emu/yuzu-mainline.git
    source-tag: mainline-$SNAPCRAFT_PROJECT_VERSION
    plugin: nil
    override-build: |
      pip3 install conan
      mkdir build && cd build
      export DESTDIR=$SNAPCRAFT_PART_INSTALL
      cmake .. -GNinja
      ninja
      ninja install
      sed -i 's|Icon=yuzu|Icon=/usr/local/share/icons/hicolor/scalable/apps/yuzu.svg|' $SNAPCRAFT_PART_INSTALL/usr/local/share/applications/yuzu.desktop
    build-packages:
      - cmake
      - ninja-build
      - build-essential
      - python3-pip
      - sqlite3
      - libsqlite3-dev
      - libsdl2-dev 
      - python3-setuptools
      - qtbase5-dev 
      - libqt5opengl5-dev 
      - libqt5svg5
      - qtwebengine5-dev 
      - qtbase5-private-dev 
      - libvulkan-dev
      - python
      - libboost-dev
      - libboost-context-dev
      - libfmt-dev
      - libzip-dev
      - liblz4-dev 
      - libmbedtls-dev
      - libssl-dev
      - libopus-dev
      - zlib1g-dev
      - libzstd-dev
    stage-packages:
      - libsdl2-2.0-0
      - libxi6
      - libxinerama1
      - libxrandr2
      - qt5-gtk-platformtheme
      - libboost-context-dev
      - libcanberra-gtk-module
      - libvulkan-dev
      - mesa-vulkan-drivers
      - nvidia-driver-440 # seems to fix nvidia vulkan at the cost of adding 100MB+ to final package, may be able to cleanup unecessary files?
      - vulkan-utils
    stage:
      - -lib/x86_64-linux-gnu/libdbus-1.so.3.19.11
      - -usr/share/doc/libdbus-1-3/changelog.Debian.gz
    after:
      - desktop-qt5
  desktop-qt5:
    build-packages:
    - build-essential
    - qtbase5-dev
    - dpkg-dev
    make-parameters:
    - FLAVOR=qt5
    plugin: make
    source: https://github.com/ubuntu/snapcraft-desktop-helpers.git
    source-subdir: qt
    stage-packages:
    - libxkbcommon0
    - ttf-ubuntu-font-family
    - dmz-cursor-theme
    - light-themes
    - adwaita-icon-theme
    - gnome-themes-standard
    - shared-mime-info
    - libqt5gui5
    - libgtk2.0-0
    - libgdk-pixbuf2.0-0
    - libqt5svg5
    - libgpm2
    - freeglut3
    - libslang2
    - libsdl2-2.0-0
    - mesa-utils
    - libgl1-mesa-glx
    - libopus0
    - try:
      - appmenu-qt5
    - locales-all
    - qtwayland5
    - xdg-user-dirs
    - libzip5
    - libpulse-dev
    - libpulse0
    override-prime: |
      snapcraftctl prime
      sed -i 's|XDG_DATA_HOME=$SNAP_USER_DATA|XDG_DATA_HOME=$SNAP_USER_COMMON|' $SNAPCRAFT_PRIME/bin/desktop-launch
      sed -i 's|XDG_CONFIG_HOME=$SNAP_USER_DATA|XDG_CONFIG_HOME=$SNAP_USER_COMMON|' $SNAPCRAFT_PRIME/bin/desktop-launch
  plasma-integration:
    plugin: nil
    stage-packages:
      - breeze-icon-theme
      - kde-style-breeze
      - plasma-integration

plugs:
  gtk-3-themes:
    interface: content
    target: $SNAP/data-dir/themes
    default-provider: gtk-common-themes
  icon-themes:
    interface: content
    target: $SNAP/data-dir/icons
    default-provider: gtk-common-themes
  sound-themes:
    interface: content
    target: $SNAP/data-dir/sounds
    default-provider: gtk-common-themes

layout:
  /usr/share/vulkan:
    symlink: $SNAP/usr/share/vulkan
  /usr/lib/$SNAPCRAFT_ARCH_TRIPLET/libvulkan_intel.so:
    symlink: $SNAP/usr/lib/$SNAPCRAFT_ARCH_TRIPLET/libvulkan_intel.so
  /usr/lib/$SNAPCRAFT_ARCH_TRIPLET/libvulkan_radeon.so:
    symlink: $SNAP/usr/lib/$SNAPCRAFT_ARCH_TRIPLET/libvulkan_radeon.so
  /usr/lib/$SNAPCRAFT_ARCH_TRIPLET/libGLX_nvidia.so.0:
    symlink: $SNAP/usr/lib/$SNAPCRAFT_ARCH_TRIPLET/libGLX_nvidia.so.0

apps:
  yuzu:
    command: bin/desktop-launch $SNAP/usr/local/bin/yuzu
    desktop: usr/local/share/applications/yuzu.desktop
    environment:
      HOME: "$SNAP_USER_COMMON"
      LD_LIBRARY_PATH: "$LD_LIBRARY_PATH:$SNAP/usr/lib/$SNAPCRAFT_ARCH_TRIPLET:$SNAP/usr/lib/$SNAPCRAFT_ARCH_TRIPLET/pulseaudio"
      KDE_FORK_SLAVES: 1
      DISABLE_WAYLAND: 1
      # KF5_LIBEXEC_DIR: "$SNAP/usr/lib/$SNAPCRAFT_ARCH_TRIPLET/libexec/kf5"
      PATH: "$PATH:$SNAP/usr/lib/$SNAPCRAFT_ARCH_TRIPLET/libexec/kf5" # Allows kioslave5 to be found, above commented env variable doesn't work for some reason  
    plugs:
      - desktop
      - desktop-legacy
      - x11
      - wayland
      - pulseaudio
      - opengl
      - joystick
      - unity7
      - network
      - home
      - removable-media
      - gsettings
      - hardware-observe
      - mount-observe
  yuzu-cmd:
    command: usr/local/bin/yuzu-cmd
    environment:
      HOME: "$SNAP_USER_COMMON"
      LD_LIBRARY_PATH: "$LD_LIBRARY_PATH:$SNAP/usr/lib/$SNAPCRAFT_ARCH_TRIPLET:$SNAP/usr/lib/$SNAPCRAFT_ARCH_TRIPLET/pulseaudio"
      DISABLE_WAYLAND: 1 
    plugs:
      - x11
      - wayland
      - pulseaudio
      - opengl
      - joystick
      - network
      - home
      - removable-media
      - hardware-observe
      - mount-observe
  yuzu-tester:
    command: usr/local/bin/yuzu-tester
    environment:
      HOME: "$SNAP_USER_COMMON"
      LD_LIBRARY_PATH: "$LD_LIBRARY_PATH:$SNAP/usr/lib/$SNAPCRAFT_ARCH_TRIPLET:$SNAP/usr/lib/$SNAPCRAFT_ARCH_TRIPLET/pulseaudio"

